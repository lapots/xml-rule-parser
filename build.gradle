buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2"
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.sonarqube'
apply plugin: 'com.github.kt3k.coveralls'

group = 'com.lapots.breed.rule'
version = '0.5.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("com.fasterxml.jackson.core:jackson-databind:2.9.4")
    compile("com.mitchellbosecke:pebble:2.4.0")
    compile("com.jayway.jsonpath:json-path:2.3.0")
    compile("net.openhft:compiler:2.3.0")
    compile('commons-io:commons-io:2.6')
    compile('com.google.inject:guice:4.1.0')
    compile('ch.qos.logback:logback-classic:1.2.3')
    compile('ch.qos.logback:logback-core:1.2.3')
    compile('org.codehaus.groovy:groovy-all:2.4.15')

    compileOnly('org.projectlombok:lombok:1.16.20')

    runtime('com.deliveredtechnologies:rulebook-core:0.9.1')

    testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
    testCompile('org.mockito:mockito-core:2.16.0')
    testCompile('org.powermock:powermock-module-junit4:2.0.0-beta.5')
    testCompile('org.powermock:powermock-api-mockito2:2.0.0-beta.5')

    testCompile('com.openpojo:openpojo:0.8.9')
    testCompile('nl.jqno.equalsverifier:equalsverifier:2.4.3')
}

apply plugin: 'checkstyle'
checkstyle {
    configDir = file('config')
}

apply plugin: 'jacoco'
test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    reports {
        xml.enabled = true
    }
}

apply plugin: 'findbugs'
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
findbugs {
    sourceSets = [sourceSets.main]
}

apply plugin: 'pmd'
tasks.withType(Pmd) {
    reports {
        html.enabled = true
    }
}

task runtime_test(type: JavaExec) {
    main = 'com.lapots.breed.rule.RuleBookRuleClassGenerator'
    classpath = sourceSets.main.runtimeClasspath
}


apply plugin: 'maven-publish'
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "s3://repo.mvn.dev/all"
            credentials(AwsCredentials) {
                accessKey = aws_access_key_id
                secretKey = aws_secret_access_key
            }
        }
    }
}
